---
import MainLayout from '../layouts/MainLayout.astro';
import SectionDivider from '../components/SectionDivider.astro';
import Card from '../components/Card.astro';
import FeatureCard from '../components/FeatureCard.astro';
import meetupMetadata from '../data/meetup-metadata.json';

// Import the meetups data from the JSON file
import meetupsData from '../data/meetups.json';

// Filter meetups by category
const developmentMeetups = meetupsData.filter(meetup => meetup.category === "Development");
const technologyMeetups = meetupsData.filter(meetup => meetup.category === "Technology");
const designMeetups = meetupsData.filter(meetup => meetup.category === "Design");

// Define the Meetup type
interface Meetup {
  name: string;
  url: string;
  tags: string[];
  category: string;
  coverImage?: string;
}

// Define the MeetupMetadata type
interface MeetupMetadata {
  imageUrl: string;
  title?: string;
  description?: string;
}

// Type assertion for the imported JSON
const typedMeetupMetadata = meetupMetadata as Record<string, MeetupMetadata>;

// Function to get the best image for a meetup
function getBestImage(meetup: Meetup) {
  // First check if we have pre-fetched metadata for this meetup
  if (typedMeetupMetadata[meetup.url] && typedMeetupMetadata[meetup.url].imageUrl) {
    return typedMeetupMetadata[meetup.url].imageUrl;
  }
  
  // If not, use the coverImage property if it exists
  if (meetup.coverImage) {
    return meetup.coverImage;
  }
  
  // Otherwise, use platform-specific default images
  if (meetup.url.includes('meetup.com')) {
    return '/images/default-meetup.jpg';
  } else if (meetup.url.includes('linkedin.com')) {
    return '/images/linkedin-default.jpg';
  } else {
    return '/images/external-default.jpg';
  }
}

// Enable metadata display for cards that need it
const showMetadata = false;
// Hide the title only when showing metadata
const hideTitle = false;
---

<MainLayout title="Meetups">
  <div class="hero">
    <div class="container">
      <h1>Meetups</h1>
      <p>Connect with the local tech community through these regular meetups in the Hampton Roads area.</p>
      <p class="data-note">
        Want to add or update a meetup? Check out our 
        <a href="https://github.com/RevolutionVA/757community/blob/main/src/data/meetups.json" target="_blank" rel="noopener noreferrer">
          meetups data file
        </a>.
      </p>
      <p class="calendar-link">
        <a href="/calendar" class="btn btn-primary">View Upcoming Events Calendar</a>
      </p>
    </div>
  </div>

  <div class="container">
    <section class="section">
      <SectionDivider title="Development" />
      <div class="grid">
        {developmentMeetups.map(meetup => (
          <Card 
            title={meetup.name} 
            href={meetup.url} 
            coverImage={getBestImage(meetup)}
            useDynamicImage={false}
            showMetadata={showMetadata}
            hideTitle={hideTitle}
          >
            <div class="tags">
              {meetup.tags.map(tag => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          </Card>
        ))}
      </div>
    </section>

    <section class="section">
      <SectionDivider title="Technology" />
      <div class="grid">
        {technologyMeetups.map(meetup => (
          <Card 
            title={meetup.name} 
            href={meetup.url} 
            coverImage={getBestImage(meetup)}
            useDynamicImage={false}
            showMetadata={showMetadata}
            hideTitle={hideTitle}
          >
            <div class="tags">
              {meetup.tags.map(tag => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          </Card>
        ))}
      </div>
    </section>

    <section class="section">
      <SectionDivider title="Design" />
      <div class="grid">
        {designMeetups.map(meetup => (
          <Card 
            title={meetup.name} 
            href={meetup.url} 
            coverImage={getBestImage(meetup)}
            useDynamicImage={false}
            showMetadata={showMetadata}
            hideTitle={hideTitle}
          >
            <div class="tags">
              {meetup.tags.map(tag => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          </Card>
        ))}
      </div>
    </section>

    <section class="section">
      <SectionDivider title="🏄🏽‍♀️ Keep surfing" />
      <div class="grid-3">
        <FeatureCard 
          title="Home" 
          href="/" 
          image="https://images.unsplash.com/photo-1507525428034-b723cf961d3e?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" 
        />
        <FeatureCard 
          title="Calendar" 
          href="/calendar" 
          image="https://images.unsplash.com/photo-1506784983877-45594efa4cbe?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" 
        />
        <FeatureCard 
          title="Communities" 
          href="/communities" 
          image="/pexels-karolina-grabowska-4476606.jpg" 
        />
        <FeatureCard 
          title="Learning" 
          href="/learning" 
          image="https://images.unsplash.com/photo-1523050854058-8df90110c9f1?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" 
        />
        <FeatureCard 
          title="Work" 
          href="/work" 
          image="https://images.unsplash.com/photo-1542744173-8e7e53415bb0?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" 
        />
      </div>
    </section>
  </div>
</MainLayout>

<style>
  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 0.5rem;
  }

  .tag {
    background-color: #e9ecef;
    color: #495057;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.875rem;
  }

  .data-note {
    font-size: 0.9rem;
    margin-top: 1rem;
    color: rgba(255, 255, 255, 0.8);
  }

  .data-note a {
    color: white;
    text-decoration: underline;
  }

  .data-note a:hover {
    text-decoration: none;
  }

  .calendar-link {
    margin-top: 1.5rem;
  }

  .btn {
    display: inline-block;
    font-weight: 500;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    border: 1px solid transparent;
    padding: 0.5rem 1rem;
    font-size: 1rem;
    line-height: 1.5;
    border-radius: 0.25rem;
    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    text-decoration: none;
  }

  .btn-primary {
    color: #fff;
    background-color: #007bff;
    border-color: #007bff;
  }

  .btn-primary:hover {
    color: #fff;
    background-color: #0069d9;
    border-color: #0062cc;
  }
</style> 