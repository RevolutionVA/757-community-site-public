---
import MainLayout from '../layouts/MainLayout.astro';
import SectionDivider from '../components/SectionDivider.astro';
import FeatureCard from '../components/FeatureCard.astro';
import calendarEvents from '../data/calendar-events.json';
import meetups from '../data/meetups.json';
import { marked } from 'marked';

// Configure marked options
marked.setOptions({
  breaks: true, // Convert \n to <br>
  gfm: true     // Enable GitHub Flavored Markdown
});

// Define types for our events
interface CalendarEvent {
  title: string;
  link: string;
  date: string;
  description: string;
  source: string;
  group: string;
}

// Filter events to only include future events
const today = new Date();
today.setHours(0, 0, 0, 0);

// Get events for the next 6 months
const sixMonthsFromNow = new Date(today);
sixMonthsFromNow.setMonth(today.getMonth() + 6);

// Filter and sort events
const upcomingEvents = calendarEvents
  .filter((event: CalendarEvent) => {
    const eventDate = new Date(event.date);
    return eventDate >= today && eventDate <= sixMonthsFromNow;
  })
  .sort((a: CalendarEvent, b: CalendarEvent) => {
    return new Date(a.date).getTime() - new Date(b.date).getTime();
  });

// Group events by month
const eventsByMonth: Record<string, CalendarEvent[]> = {};
upcomingEvents.forEach((event: CalendarEvent) => {
  const date = new Date(event.date);
  const monthYear = date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });
  
  if (!eventsByMonth[monthYear]) {
    eventsByMonth[monthYear] = [];
  }
  
  eventsByMonth[monthYear].push(event);
});

// Get array of month-year keys in chronological order
const monthsInOrder = Object.keys(eventsByMonth).sort((a, b) => {
  const dateA = new Date(a);
  const dateB = new Date(b);
  return dateA.getTime() - dateB.getTime();
});

// Function to convert Markdown to HTML
function formatDescription(description: string): string {
  if (!description) return '';
  
  try {
    // Pre-process the description to fix common markdown issues
    let processedDescription = description
      // Fix escaped characters in URLs
      .replace(/\\([.\\-])/g, '$1')
      // Fix URLs directly followed by markdown link syntax
      .replace(/(\bhttps?:\/\/[^\s\]]+)]\(([^)]+)\)/g, '$1 ]($2)')
      // Fix malformed markdown links missing opening bracket
      .replace(/(\bhttps?:\/\/[^\s]+)\]\(([^)]+)\)/g, '[$1]($2)')
      // Fix double closing brackets in markdown links
      .replace(/\]\](\([^)]+\))/g, ']$1')
      // Fix URLs that end with a closing bracket followed by markdown link syntax
      .replace(/(\bhttps?:\/\/[^\s]+)\)\]\(([^)]+)\)/g, '$1) ]($2)')
      // Fix specific case: "Members Portal [[https://www.cs2ai.org/\](https://www.cs2ai.org/)](https://www.cs2ai.org/](https://www.cs2ai.org/))"
      .replace(/\[\[https?:\/\/[^\]]+\]\(([^)]+)\)\]\(([^)]+)\)/g, '[$1]($2)')
      // Fix specific case: "https://www.cs2ai.org/get-involved](https://www.cs2ai.org/get-involved)"
      .replace(/(\bhttps?:\/\/[^\s]+)\]\(([^)]+)\)/g, '[$1]($2)')
      // Fix specific CS2AI URL pattern
      .replace(/\[https:\/\/www\.cs2ai\.org\/([^\]]+)\\?\]\\\(https:\/\/www\.cs2ai\.org\/([^)]+)\\?\)/g, '[https://www.cs2ai.org/$1](https://www.cs2ai.org/$2)')
      // Fix URLs with periods at the end that should be outside the link
      .replace(/(\[https:\/\/[^\]]+)\.\]/g, '$1].')
      // Fix specific case: event.https://www.cs2ai.org/get-involved](https://www.cs2ai.org/get-involved)
      .replace(/(\w+)\.https:\/\//g, '$1. https://');
    
    // Parse Markdown to HTML using marked.parse
    const html = marked.parse(processedDescription);
    
    // Convert to string if it's not already
    const htmlString = typeof html === 'string' ? html : String(html);
    
    // Post-process HTML to fix any remaining issues
    const fixedHtml = htmlString
      // Fix any URLs that might have been broken by the markdown parser
      .replace(/(href="[^"]*?)\\([^"]*?")/g, '$1$2');
    
    return fixedHtml;
  } catch (error) {
    console.error('Error parsing Markdown:', error);
    // Fallback to simple newline replacement and link detection if Markdown parsing fails
    return description
      .replace(/\n/g, '<br />')
      .replace(/(\bhttps?:\/\/[^\s<]+)/g, '<a href="$1" target="_blank" rel="noopener noreferrer">$1</a>');
  }
}

// Function to find meetup URL for a group name
function findMeetupUrl(groupName: string): string | null {
  const meetup = meetups.find(m => m.name === groupName);
  return meetup ? meetup.url : null;
}
---

<MainLayout title="Tech Events Calendar">
  <div class="hero">
    <div class="container">
      <h1>Tech Events Calendar</h1>
      <p>Upcoming tech events and meetups in the Hampton Roads area for the next six months.</p>
      <p class="data-note">
        Want to add or update an event? Check out our 
        <a href="https://github.com/RevolutionVA/757community/blob/main/src/data/calendar-events.json" target="_blank" rel="noopener noreferrer">
          calendar events data file
        </a>.
      </p>
    </div>
  </div>

  <div class="container">
    <section class="section">
      <SectionDivider title="Upcoming Events" />
      {upcomingEvents.length === 0 ? (
        <div class="no-events">
          <h2>No Events Scheduled</h2>
          <p>There are currently no upcoming events scheduled in the next six months.</p>
          <p>Check back later or visit the individual meetup groups for more information.</p>
          <a href="/meetups" class="btn btn-primary">View Meetup Groups</a>
        </div>
      ) : (
        <div class="calendar-container">
          {monthsInOrder.map(monthYear => (
            <div class="month-section">
              <h3 class="month-heading">{monthYear}</h3>
              <div class="events-list">
                {eventsByMonth[monthYear].map((event: CalendarEvent) => (
                  <div class="event-card">
                    <div class="event-date">
                      <span class="day">{new Date(event.date).getDate()}</span>
                      <span class="weekday">{new Date(event.date).toLocaleDateString('en-US', { weekday: 'short' })}</span>
                    </div>
                    <div class="event-details">
                      <h4 class="event-title">
                        <a href={event.link} target="_blank" rel="noopener noreferrer">
                          {event.title}
                        </a>
                      </h4>
                      {(() => {
                        const meetupUrl = findMeetupUrl(event.group);
                        return (
                          <p class="event-group">
                            <span class="group-icon">👥</span> 
                            {meetupUrl ? (
                              <a href={meetupUrl} target="_blank" rel="noopener noreferrer" class="group-link">
                                {event.group}
                                <span class="link-icon">↗</span>
                              </a>
                            ) : (
                              <span>{event.group}</span>
                            )}
                          </p>
                        );
                      })()}
                      <p class="event-time">
                        {new Date(event.date).toLocaleTimeString('en-US', { 
                          hour: 'numeric', 
                          minute: '2-digit',
                          hour12: true 
                        })}
                      </p>
                      {event.description && (
                        <div class="event-description" set:html={formatDescription(event.description)} />
                      )}
                      <div class="event-source">
                        <span class="source-tag">{event.source}</span>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>
      )}
    </section>

    <section class="section">
      <SectionDivider title="🏄🏽‍♀️ Keep surfing" />
      <div class="grid-3">
        <FeatureCard 
          title="Home" 
          href="/" 
          image="https://images.unsplash.com/photo-1507525428034-b723cf961d3e?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" 
        />
        <FeatureCard 
          title="Meetups" 
          href="/meetups" 
          image="https://images.unsplash.com/photo-1524178232363-1fb2b075b655?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" 
        />
        <FeatureCard 
          title="Communities" 
          href="/communities" 
          image="/pexels-karolina-grabowska-4476606.jpg" 
        />
        <FeatureCard 
          title="Learning" 
          href="/learning" 
          image="https://images.unsplash.com/photo-1523050854058-8df90110c9f1?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" 
        />
        <FeatureCard 
          title="Work" 
          href="/work" 
          image="https://images.unsplash.com/photo-1542744173-8e7e53415bb0?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" 
        />
      </div>
    </section>
  </div>
</MainLayout>

<script>
  // No filtering functionality needed
</script>

<style>
  .coming-soon {
    background-color: #fff;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    text-align: center;
    font-size: 1.25rem;
    color: #6c757d;
  }

  .no-events {
    background-color: #fff;
    padding: 3rem 2rem;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    text-align: center;
    color: #6c757d;
  }

  .no-events h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
    color: #343a40;
  }

  .no-events p {
    margin-bottom: 1rem;
    font-size: 1.1rem;
  }

  .btn {
    display: inline-block;
    font-weight: 500;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    border: 1px solid transparent;
    padding: 0.5rem 1rem;
    font-size: 1rem;
    line-height: 1.5;
    border-radius: 0.25rem;
    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    text-decoration: none;
    margin-top: 1rem;
  }

  .btn-primary {
    color: #fff;
    background-color: #007bff;
    border-color: #007bff;
  }

  .btn-primary:hover {
    color: #fff;
    background-color: #0069d9;
    border-color: #0062cc;
  }

  .calendar-container {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .month-section {
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    overflow: hidden;
  }

  .month-heading {
    background-color: #f8f9fa;
    padding: 1rem;
    margin: 0;
    font-size: 1.5rem;
    color: #343a40;
    border-bottom: 1px solid #e9ecef;
  }

  .events-list {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .event-card {
    display: flex;
    gap: 1rem;
    padding: 1rem;
    border-radius: 4px;
    background-color: #f8f9fa;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .event-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .event-date {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-width: 60px;
    padding: 0.5rem;
    background-color: #007bff;
    color: white;
    border-radius: 4px;
    text-align: center;
  }

  .day {
    font-size: 1.5rem;
    font-weight: bold;
    line-height: 1;
  }

  .weekday {
    font-size: 0.875rem;
    text-transform: uppercase;
  }

  .event-details {
    flex: 1;
  }

  .event-title {
    margin: 0 0 0.5rem 0;
    font-size: 1.25rem;
  }

  .event-title a {
    color: #343a40;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .event-title a:hover {
    color: #007bff;
  }

  .event-group {
    margin: 0 0 0.25rem 0;
    font-size: 0.875rem;
    display: inline-block;
    background-color: #e9ecef;
    color: #495057;
    font-weight: 600;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    border-left: 3px solid #007bff;
    transition: transform 0.2s ease;
  }
  
  .event-group:hover {
    transform: translateY(-1px);
  }
  
  .group-icon {
    margin-right: 0.25rem;
    font-size: 0.9rem;
  }
  
  .group-link {
    color: inherit;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
  }
  
  .group-link:hover {
    text-decoration: underline;
  }
  
  .link-icon {
    font-size: 0.75rem;
    margin-left: 0.25rem;
    opacity: 0.7;
    transition: opacity 0.2s ease;
  }
  
  .group-link:hover .link-icon {
    opacity: 1;
  }

  .event-time {
    margin: 0 0 0.5rem 0;
    font-size: 0.875rem;
    color: #6c757d;
  }

  .event-description {
    font-size: 0.875rem;
    color: #495057;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
    line-height: 1.5;
  }

  /* Style Markdown elements in the description */
  .event-description p {
    margin: 0.5rem 0;
  }

  .event-description strong,
  .event-description b {
    font-weight: 600;
  }

  .event-description em,
  .event-description i {
    font-style: italic;
  }

  .event-description a {
    color: #007bff;
    text-decoration: none;
  }

  .event-description a:hover {
    text-decoration: underline;
  }

  .event-description ul,
  .event-description ol {
    margin: 0.5rem 0;
    padding-left: 1.5rem;
  }

  .event-description li {
    margin-bottom: 0.25rem;
  }

  .event-description code {
    background-color: #f1f1f1;
    padding: 0.1rem 0.3rem;
    border-radius: 3px;
    font-family: monospace;
  }

  .event-source {
    margin-top: 0.5rem;
  }

  .source-tag {
    display: inline-block;
    background-color: #e9ecef;
    color: #495057;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
    text-transform: uppercase;
  }

  .data-note {
    font-size: 0.9rem;
    margin-top: 1rem;
    color: rgba(255, 255, 255, 0.8);
  }

  .data-note a {
    color: white;
    text-decoration: underline;
  }

  .data-note a:hover {
    text-decoration: none;
  }

  @media (max-width: 768px) {
    .event-card {
      flex-direction: column;
    }

    .event-date {
      flex-direction: row;
      justify-content: flex-start;
      min-width: auto;
      width: 100%;
    }

    .day {
      margin-right: 0.5rem;
    }
  }
</style> 